
@page "/Tecnico/Edit/{TecnicoId:int}"
@using RegistroTecnicos.Models
@using RegistroTecnicos.Services
@inject TecnicoService tecnicoService
@inject NavigationManager navigationManagere
@rendermode InteractiveServer

<EditForm Model="tecnicos" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card shadow-lg border-0" style="background-color white">

        <div class="card-header bg-primary text-center text-white py-2 rounded">
            <h3 style="font-weight: bold;" class="font-weight-bold">Modificar T&eacute;cnico</h3>
        </div>

        <div class="card-body">
            @*TecnicoId*@
            <div class="mb-3">
                <label for="TecnicoId" class="form-label">T&eacute;cnicoId:</label>
                <InputNumber @bind-Value="tecnicos.TecnicoId" class="form-control" />
            </div>
           
            @*Nombres*@
            <div class="mb-3">
                <label for="Nombres" class="form-label">Nombres:</label>
                <InputText @bind-Value="tecnicos.Nombres" class="form-control" />
                <ValidationMessage For="@(() => tecnicos.Nombres)" />
            </div>
            @*SueldoHora*@
            <div class="mb-3">
                <label for="SueldoHora" class="form-label">SueldoHora:</label>
                <InputNumber @bind-Value="tecnicos.Sueldohora" class="form-control" />
                <ValidationMessage For="@(() => tecnicos.Sueldohora)" />
            </div>
        </div>

        <div class="card-footer d-flex justify-content-lg-center text-center">
            <div class="btn-group">
                <button type="button" class="btn btn-outline-primary ml-2" @onclick="Nuevo"><span class="bi bi-plus"></span>Nuevo</button>
                <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle-fill"></span>Guardar</button>
                <button type="button" class="btn btn-outline-danger" @onclick="Retroceder"><span class="bi bi-arrow-bar-left"></span>Retroceder</button>

            </div>
        </div>
    </div>

</EditForm>

@code {
    [Parameter]
    public int TecnicoId { get; set; }
    public Tecnicos tecnicos { get; set; } = new Tecnicos();
    private bool existe = false;

    protected override async Task OnInitializedAsync()
    {
       
        if (TecnicoId != 0)
        {
            await Buscar();
        }
    }

    public async Task Buscar()
    {
        existe = false;
        var tecnicoEncontrado = await tecnicoService.Buscar(TecnicoId);
        if (tecnicoEncontrado != null)
        {
            tecnicos = tecnicoEncontrado;
        }
        else
        {
            Nuevo();
        }
    }

    public async Task<bool> Validar()
    {
        var listaTecnicos = await tecnicoService.Listar(t => t.Nombres.ToLower() == tecnicos.Nombres.ToLower() && t.TecnicoId != tecnicos.TecnicoId);
        existe = listaTecnicos.Any();
        return !existe;
    }

    public async Task Nuevo()
    {
        tecnicos = new Tecnicos();
        existe = false;
    }

    public async Task Guardar()
    {
        if (!await Validar())
        {
            
            return;
        }
        var guardado = await tecnicoService.Guardar(tecnicos);
        if (guardado)
        {
           
            Nuevo();
        }

    }
    public async Task Retroceder()
    {
        navigationManagere.NavigateTo("/Tecnico/Index");
    }
}
